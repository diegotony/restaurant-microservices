version: '3'
services:
################################################################
#                     Kong Configuration                       #
################################################################

  kong:
    container_name: kong
    restart: always
    networks:
      - kong-net
    image: kong:1.4.0
    ports:
      - "8000:8000/tcp"
      - "8443:8443/tcp"
      - "8001:8001/tcp"
      - "8444:8444/tcp"
    # links:
    #   - client-micro
    #   - order-micro
    # depends_on:
    #   - client-micro
    #   - order-micro
    volumes: 
      - kong-vol:/usr/local/kong/declarative
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_PROXY_LISTEN_SSL=0.0.0.0:8443
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15

# ###############################################################
# #                         DATABASES                           #
# ###############################################################
#   mongodb-client:
#     image: 'mongo'
#     container_name: mongodb-client
#     restart: always
#     ports:
#       - "27019:27017"

#     volumes:
#       - mongodb-client:/data/db/client
#     networks:
#       - kong-net

#     volumes:
#       - mongodb-client:/data/db/delivery
#     networks:
#       - kong-net
  
#   mongodb-order:
#     image: 'mongo'
#     container_name: mongodb-order
#     restart: always
#     ports:
#       - "27021:27017"

#     volumes:
#       - mongodb-order:/data/db/order
#     networks:
#       - kong-net

# #############################################################
# #                        Services                           #
# #############################################################
#   client-micro:
#     restart: always
#     image: diegotony/client-micro:k8s
#     ports:
#       - "4003:4003"
#     environment:
#       - MONGO_HOST=mongodb-client
#       - PORT=4003
#     depends_on:
#       - mongodb-client
#     links:
#       - mongodb-client
#     networks:
#       kong-net:
#         ipv4_address: 172.28.1.2


#   order-micro:
#     restart: always
#     image: diegotony/orden-micro:k8s
#     ports:
#       - "4013:4013"
#     environment:
#       - MONGO_HOST=mongodb-order
#       - PORT=4013
#     depends_on:
#       - mongodb-order
#     links:
#       - mongodb-order
#     networks:
#       kong-net:
#         ipv4_address: 172.28.1.4


volumes:
#   mongodb-client:
#   mongodb-order:
  kong-vol:

networks:
  kong-net:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
