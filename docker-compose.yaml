version: '3'
services:
################################################################
#                     Kong Configuration                       #
################################################################
  kong-database:
    container_name: kong-database
    image: postgres:9.6
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    networks:
      - kong-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong:latest
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_PG_HOST: kong-database
    links:
      - kong-database
    depends_on:
      - kong-database

  kong:
    container_name: kong
    restart: always
    networks:
      - kong-net
    image: kong
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    links:
      - kong-database
      - kong-migration
      - billing-micro
      - client-micro
      - delivery-micro
      - order-micro
      - payment-micro
    depends_on:
      - kong-database
      - kong-migration
      - billing-micro
      - client-micro
      - delivery-micro
      - order-micro
      - payment-micro
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_PROXY_LISTEN_SSL=0.0.0.0:8443
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15

###############################################################
#                         DATABASES                           #
###############################################################
  mongodb-billing:
    image: 'bitnami/mongodb'
    container_name: mongodb-billing
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - mongodb-billing:/data/db/billing
    networks:
      - kong-net
  
  mongodb-client:
    image: 'bitnami/mongodb'
    container_name: mongodb-client
    restart: always
    ports:
      - "27019:27017"

    volumes:
      - mongodb-client:/data/db/client
    networks:
      - kong-net

  mongodb-delivery:
    image: 'bitnami/mongodb'
    container_name: mongodb-delivery
    restart: always
    ports:
      - "27020:27017"

    volumes:
      - mongodb-delivery:/data/db/delivery
    networks:
      - kong-net
  
  mongodb-order:
    image: 'bitnami/mongodb'
    container_name: mongodb-order
    restart: always
    ports:
      - "27021:27017"

    volumes:
      - mongodb-order:/data/db/order
    networks:
      - kong-net
  
  # mongodb-payment:
  #   image: 'bitnami/mongodb'
  #   container_name: mongodb-payment
  #   restart: always
  #   ports:
  #     - "27022:27017"
  #   volumes:
  #     - mongodb-payment:/data/db/payment
  #   networks:
  #     - kong-net

#############################################################
#                        Services                           #
#############################################################
  billing-micro:
    restart: always
    image: diegotony/billing-micro:travis
    ports:
      - "4001:4001"
    environment:
      - MONGO_URI=mongodb://mongodb-billing:27017/billing
      - PORT=4001
    depends_on:
      - mongodb-billing
    links:
      - mongodb-billing
    networks:
      kong-net:
        ipv4_address: 172.28.1.1

  client-micro:
    restart: always
    image: diegotony/client-micro:travis
    ports:
      - "4003:4003"
    environment:
      - MONGO_URI=mongodb://mongodb-client:27017/client
      - PORT=4003
    depends_on:
      - mongodb-client
    links:
      - mongodb-client
    networks:
      kong-net:
        ipv4_address: 172.28.1.2

  delivery-micro:
    restart: always
    image: diegotony/delivery-micro:travis
    ports:
      - "4007:4007"
    environment:
      - MONGO_URI=mongodb://mongodb-delivery:27017/delivery
      - PORT=4007
    depends_on:
      - mongodb-delivery
    links:
      - mongodb-delivery
    networks:
      kong-net:
        ipv4_address: 172.28.1.3


  order-micro:
    restart: always
    image: diegotony/orden-micro:travis
    ports:
      - "4013:4013"
    environment:
      - MONGO_URI=mongodb://mongodb-order:27017/order
      - PORT=4013
    depends_on:
      - mongodb-order
    links:
      - mongodb-order
    networks:
      kong-net:
        ipv4_address: 172.28.1.4


  # payment-micro:
  #   restart: always
  #   image: diegotony/payment-micro:travis
  #   ports:
  #     - "4019:4019"
  #   environment:
  #     - MONGO_URI=mongodb://mongodb-payment:27017/payment
  #     - PORT=4019
  #   depends_on:
  #     - mongodb-billing
  #   links:
  #     - mongodb-billing
  #   networks:
  #     kong-net:
  #       ipv4_address: 172.28.1.5

volumes:
  mongodb-billing:
  mongodb-client:
  mongodb-delivery:
  mongodb-order:
  # mongodb-payment:

networks:
  kong-net:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
